import{_ as e,o,c as t,Q as a}from"./chunks/framework.48879250.js";const k=JSON.parse('{"title":"功能","description":"","frontmatter":{},"headers":[],"relativePath":"function.md","filePath":"function.md"}'),r={name:"function.md"},l=a('<h1 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能" aria-label="Permalink to &quot;功能&quot;">​</a></h1><p>通过自定义js函数为butterfly添加额外的扩展功能。</p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><p><a href="https://blog.im0o.top/posts/d3bc8dff.html" target="_blank" rel="noreferrer">开箱即用，支持跨域的 hexo 博客 api</a> - 0o酱</p><blockquote><p>支持跨域、随意开关接口的 hexo 博客 api 插件。</p></blockquote><h2 id="功能开发" tabindex="-1">功能开发 <a class="header-anchor" href="#功能开发" aria-label="Permalink to &quot;功能开发&quot;">​</a></h2><p>原主题不具备的功能通过自定义js来实现。</p><p><a href="https://blog.zhheo.com/p/c116857c.html" target="_blank" rel="noreferrer">Hexo的Butterfly魔改：随机网页跳转（无缝版）</a> - 张洪Heo</p><blockquote><p>提到随机网页跳转，大家就想到hexo-generator-random，我之前也是使用这个插件来做随机网页，这个插件的原理是生成一个html，只要访问这个html就可以进入随机的文章，但是这种方法有问题。</p></blockquote><p><a href="https://blog.leonus.cn/2022/randomPost.html" target="_blank" rel="noreferrer">随机访问一篇文章的实现</a> - Leonus</p><blockquote><p>随着文章慢慢的增多，后面的文章似乎就变的很少被看到，于是我想起来了这个随机访问一篇文章的功能。 果然，多浏览他人博客能出现更多的想法。</p></blockquote><p><a href="https://blog.leonus.cn/2022/bg2.html" target="_blank" rel="noreferrer">切换博客背景2.0版本——弹窗切换</a> - Leonus</p><blockquote><p>昨天更新了一下切换背景页面的文章，然后在群里得到@Chuckle的建议：创建一个窗口方便切换 决定采纳，由于昨天晚上开始的比较晚，主要看了winbox的文档，今天早上起了个大早把其给肝出来了。</p><p>本来我是想自己写窗口的，但是写出来之后发现开关窗口啦，适配窗口啦之类的还要写很多，想起来就头疼。 于是就百度现成的插件，看上了这个GitHub项目：winbox 你也可以参考GitHub项目内的参数和api自行配制更多有趣的功能。</p></blockquote><p><a href="https://blog.zhheo.com/p/32a503a6.html" target="_blank" rel="noreferrer">Butterfly魔改：国外网络访问检测，用js判断国外网络执行函数</a> - 张洪Heo</p><blockquote><p>因为图床用的腾讯云cos，挂的cdn不支持外网访问（我也没打算支持），所以使用外网小伙伴无法访问任何图片，很多人以为是本站的图床挂了，然而可能是因为用户自己是用的外网。那么最好的方式就是告诉用户，你用的不是国内网进行访问。</p><p>如果你不需要外网访问你的网站，也可以利用这个js将网页跳转到其他页面或者其他操作。</p></blockquote><p><a href="https://blog.zhheo.com/p/8148ca95.html" target="_blank" rel="noreferrer">Hexo魔改：Codepen项目组件移植教程，将Codepen项目移植到博客</a> - 张洪Heo</p><blockquote><p>好久都没写魔改教程了，上次写的时候还是在上次。有一说一，近期的魔改基本上都是针对页面的变化。最近刚适配的1500px宽度，大宽度带来的视觉沉浸感非常棒，但是会带来很多问题，例如之前的主题横向元素过少，以至于在横屏比较宽的场景下元素都会被拉伸得很大。所以这几次版本的迭代都是为了增加横向的元素，减少被拉伸感。</p><p>偶尔逛过我的博客的小伙伴应该看到了我在置顶区域新增了一个小组件。</p></blockquote><p><a href="https://blog.zhheo.com/p/62e9e069.html" target="_blank" rel="noreferrer">网页插入一段文字的打字机效果，逐字出现循环回退删除动画Html</a> - 张洪Heo</p><blockquote><p>最近主题的更新是想让页面更加丰富起来，因为之前为了界面清爽删掉了很多功能，虽然一种程度上算是简约，但是对于个人博客来说不想只包含文章，还应该多一些信仰之力。所以为了高大上的逼格（狗头）所以分析了一下Butterfly主题的打字机效果。</p><p>Butterfly用的是typed.js来做的打字机效果。开箱即用，非常好用。</p></blockquote><p><a href="https://blog.zhheo.com/p/8dc862fc.html" target="_blank" rel="noreferrer">Butterfly主题下如何使用Openwrite的查看更多给公众号引流</a> - 张洪Heo</p><blockquote><p>折腾一晚上，终于完成了～之前一直都有兼容性问题，折腾了几个小时搞定。因为网上也没有针对Butterfly的教程，整理的时候总是与Lazyload和pjax还有fancybox有兼容性问题。目前博客运行良好，遇到的问题都解决了。下面来说一下教程。</p></blockquote><p><a href="https://lizilong.netlify.app/posts/d5b5/" target="_blank" rel="noreferrer">新文章通知</a> - Zilong Li</p><blockquote><p>每次部署新文章时自动通知读者新的文章更新</p></blockquote><h2 id="原生功能自定义" tabindex="-1">原生功能自定义 <a class="header-anchor" href="#原生功能自定义" aria-label="Permalink to &quot;原生功能自定义&quot;">​</a></h2><p>原主题具备的功能进行深度定制和优化。</p><p><a href="https://blog.zhheo.com/p/3e567fa7.html" target="_blank" rel="noreferrer">pjax无法生效解决办法，butterfly主题维护你的pjax</a> - 张洪Heo</p><blockquote><p>之前自己的网页pjax时灵时不灵，真的是奇了怪了。研究了一下pjax的文档，发现很多东西都是用的有问题，因为最开始魔改页面的时候都没注意过pjax，所以留下了大量屎山代码。</p><p>这个文章可以更好的帮助你去魔改页面，并且保留pjax。</p></blockquote><p><a href="https://blog.trfox.ml/p/71e4d414dfa8/" target="_blank" rel="noreferrer">给博客添加复制提醒</a> - Teror Fox</p><blockquote><p>本文使用<code>izitoast</code>库实现弹窗</p></blockquote><h2 id="自定义功能定制" tabindex="-1">自定义功能定制 <a class="header-anchor" href="#自定义功能定制" aria-label="Permalink to &quot;自定义功能定制&quot;">​</a></h2><p>原主题不具备的第三方功能进行自定义定制。</p><p><a href="https://blog.leonus.cn/2022/51la.html" target="_blank" rel="noreferrer">51la统计美化</a> - Leonus</p><blockquote><p>逛洪哥博客的时候看到了这个关于51la统计的文章，觉得还不错于是也跟着弄了一下。 但是在弄前端统计的时候，发现自带的样式实在太简单，写css覆盖的话还很麻烦，夜间模式看的话很突兀。 所以我就稍微改了一下，只要它的数据，样式全由自己来写。</p></blockquote>',33),p=[l];function n(h,c,b,s,u,f){return o(),t("div",null,p)}const d=e(r,[["render",n]]);export{k as __pageData,d as default};
